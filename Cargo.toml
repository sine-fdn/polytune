workspace = { members = [
    "crates/polytune-test-utils",
    "examples/api-integration",
    "examples/http-multi-server-channels",
    "examples/http-single-server-channels",
    "examples/wasm-http-channels",
    "examples/sql-integration",
] }
[package]
name = "polytune"
version = "0.2.0-alpha.1"
edition = "2024"
rust-version = "1.88.0"
description = "Maliciously-Secure Multi-Party Computation (MPC) Engine using Authenticated Garbling"
repository = "https://github.com/sine-fdn/polytune/"
license = "MIT"
categories = ["cryptography"]
keywords = [
    "secure-computation",
    "garbled-circuits",
    "circuit-description",
    "smpc",
    "mpc",
]
# we use one bench binary with `benches/main.rs` as the starting point which
# executes benches in various modules under `benches/`. Those modules should
# not be automatically detected as separate benchmarks.
autobenches = false

[lib]
bench = false

[features]
# For internal use only!
# To work around a limitation in criterion, we define a "private" feature
# which we use to conditionally expose some otherwise private functions
# as public for benchmarking. The __ prefix results in docs.rs not listing
# this feature. 
__bench = []

[dependencies]
aes = "0.9.0-rc.0"
bincode = "1.3.3"
blake3 = "1.5.0"
bytemuck = { version = "1.23.2", features = ["latest_stable_rust"] }
chacha20poly1305 = "0.10.1"
curve25519-dalek = { version = "4.1.0", features = ["rand_core"] }
futures = { version = "0.3.31", default-features = false, features = [
    "alloc",
    "async-await",
] }
garble_lang = { version = "0.7.0", features = ["serde"] }
hybrid-array = { version = "0.3.1", features = ["bytemuck", "serde"] }
rand = "0.9.2"
rand_chacha = "0.9.0"
rand_core_0_6 = { package = "rand_core", version = "0.6" }
seq-macro = "0.3.6"
serde = { version = "1.0.195", features = ["derive"] }
subtle = "2.6.1"
thiserror = "2.0.16"
tokio = { version = "1.47.1", features = ["macros", "rt", "sync", "time"] }
tracing = "0.1.41"
wide = { version = "0.7.33", features = ["serde"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
# For wasm compatibility, we need to enable the getrandom js features
# currently both of these versions are present in the dependency tree
# Furthermore RUSTFLAGS needs to be set to
# RUSTFLAGS='--cfg getrandom_backend="wasm_js"'
# when compiling for wasm32-unknown-unknown
getrandom_0_2 = { package = "getrandom", version = "0.2.16", features = ["js"] }
getrandom_0_3 = { package = "getrandom", version = "0.3", features = [
    "wasm_js",
] }

[target.'cfg(any(target_arch = "aarch64", target_arch = "loongarch64", target_arch = "x86", target_arch = "x86_64"))'.dependencies]
cpufeatures = "0.2.17"

[dev-dependencies]
criterion = { version = "0.7.0", features = ["async_tokio"] }
polytune-test-utils = { path = "crates/polytune-test-utils" }
proptest = "1.7.0"
tokio = { version = "1.47.1", features = ["full"] }
tracing-subscriber = { version = "0.3.20", features = ["env-filter"] }

[[bench]]
name = "main"
harness = false
required-features = ["__bench"]

[package.metadata.cargo-machete]
# we need the hybrid-array dependency to enable the serde and bytemuck features
ignored = ["hybrid-array"]

# Use this profile when profiling polytune with e.g. samply or perf
[profile.debug-release]
debug = true
inherits = "release"

[patch.crates-io]
garble_lang = { git = "https://github.com/sine-fdn/garble-lang.git" }
