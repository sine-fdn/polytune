name: Pull Request Checks

# By using the pull_request event, the workflow is run on
# the merge commit before it is added to main. This ensures
# that the pipeline won't break after the merge.
on:
  pull_request:
    branches:
      - "main"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo build --release
      - run: cargo bench --no-run
      - run: cargo test --release
      - run: cargo clippy --all-targets -F __bench -- -Dwarnings
      - run: cargo fmt --check
      - name: Install cargo-machete
        uses: taiki-e/install-action@dd154fff2f898f480894c915c12aa8782e93c71b
        with:
          tool: cargo-machete@0.8.0 # install-action checks sha for the binary
      - name: Detect unused dependencies
        run: cargo machete
      - run: cargo build --release && cargo test --release -- --nocapture
        working-directory: ./examples/http-multi-server-channels
      - run: cargo build --release && cargo test --release -- --nocapture
        working-directory: ./examples/http-single-server-channels
      - run: cargo build --release && cargo test --release -- --nocapture
        working-directory: ./examples/iroh-p2p-channels
      - run: docker compose -f docker-compose.yml up -d && cargo build --release && cargo test --release -- --nocapture
        working-directory: ./examples/sql-integration
      - run: cargo build --release && cargo test --release -- --nocapture
        working-directory: ./examples/api-integration
